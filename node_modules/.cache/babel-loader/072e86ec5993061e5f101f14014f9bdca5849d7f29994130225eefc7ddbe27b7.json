{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactTraining2Feb\\\\Quiz-App\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport Question from \"./Question\";\nimport \"./Quiz.css\";\nimport QuestionFiltter from \"./QuestionFiltter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = props => {\n  _s();\n  const {\n    questions\n  } = props;\n\n  //button on change\n  const onClickHandle = () => {\n    alert(\"Submitted Successfully !!!\");\n    console.log(questions);\n  };\n  //-----Filtter logic----------------------------------------\n  const [filteredCategory, setFilteredCategory] = useState(\"All\");\n  const filterChangeHandler = selectedCategory => {\n    setFilteredCategory(selectedCategory);\n  };\n  const filtteredQuestions = questions.filter(question => {\n    return question.category === filteredCategory;\n  });\n\n  //display questions \n  let length1 = filtteredQuestions.length;\n  let questioncontent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"There is No Quiz in \", filteredCategory, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 27\n  }, this);\n  if (filtteredQuestions.length > 0) {\n    questioncontent = filtteredQuestions.map((question, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: question,\n          len: length1,\n          index: index\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    });\n  }\n  //---for all\n  filteredCategory === \"All\" ? length1 = Object.keys(questions).length : length1 = filtteredQuestions.length;\n  if (filteredCategory === \"All\") {\n    questioncontent = questions.map((question, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: question,\n          len: length1,\n          index: index\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quizfull\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz_totalque\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Que: \", length1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"quiz__time\",\n        children: \"Time:10 Min\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionFiltter, {\n      selected: filteredCategory,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), questioncontent, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quiz_submitbtn\",\n        onClick: onClickHandle,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"CZsuYPqawvPrz3AlTn3B45aCeTg=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["Question","QuestionFiltter","useState","Quiz","props","questions","onClickHandle","alert","console","log","filteredCategory","setFilteredCategory","filterChangeHandler","selectedCategory","filtteredQuestions","filter","question","category","length1","length","questioncontent","map","index","id","Object","keys"],"sources":["D:/ReactTraining2Feb/Quiz-App/src/components/Quiz.js"],"sourcesContent":["import Question from \"./Question\";\r\nimport \"./Quiz.css\";\r\n\r\nimport QuestionFiltter from \"./QuestionFiltter\";\r\nimport { useState } from \"react\";\r\n\r\nconst Quiz = (props) => {\r\n    const { questions } = props;\r\n\r\n    //button on change\r\n    const onClickHandle = () => {\r\n        alert(\"Submitted Successfully !!!\");\r\n        console.log(questions);\r\n    };\r\n    //-----Filtter logic----------------------------------------\r\n    const [filteredCategory, setFilteredCategory] = useState(\"All\");\r\n    const filterChangeHandler = (selectedCategory) => {\r\n        setFilteredCategory(selectedCategory);\r\n    };\r\n    const filtteredQuestions = questions.filter((question) => {\r\n        return question.category === filteredCategory;\r\n    })\r\n\r\n    //display questions \r\n    let length1 = filtteredQuestions.length\r\n    let questioncontent = <p>There is No Quiz in {filteredCategory} </p>;\r\n    if (filtteredQuestions.length > 0) {\r\n        questioncontent = filtteredQuestions.map((question, index) => {\r\n            return (\r\n                <div>\r\n                    <Question key={question.id} question={question} len={length1} index={index} />\r\n                    <hr />\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n    //---for all\r\n    filteredCategory === \"All\" ? length1 = Object.keys(questions).length : length1 = filtteredQuestions.length\r\n\r\n    if (filteredCategory === \"All\") {\r\n        questioncontent = questions.map((question, index) => {\r\n            return (\r\n                <div>\r\n                    <Question key={question.id} question={question} len={length1} index={index} />\r\n                    <hr />\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"quizfull\">\r\n            <div className=\"quiz_totalque\">\r\n                <h2>Total Que: {length1}</h2>\r\n                <h2 className=\"quiz__time\">Time:10 Min</h2>\r\n            </div>\r\n            {/* //apply  filtter */}\r\n            <QuestionFiltter\r\n                selected={filteredCategory}\r\n                onChangeFilter={filterChangeHandler}\r\n            />\r\n            {questioncontent}\r\n            <div>\r\n                <button className=\"quiz_submitbtn\" onClick={onClickHandle}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}